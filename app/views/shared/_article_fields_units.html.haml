-# content_for :javascript do
:javascript
  var articleUnitRatioTemplate$ = $($.parseHTML("#{escape_javascript(render(partial: 'shared/article_unit_ratio', locals: {article_unit_ratio: @empty_article_unit_ratio, f: f, article_unit_ratio_counter: -1}))}"));
  function addButtonListeners() {
    const removeButtons$ = $('*[data-remove-ratio]');
    removeButtons$.off('click').on('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      const tr$ = $(e.target).parents('tr');
      const index = tr$.index() + 1;
      const id = $(`[name="article[article_unit_ratios_attributes][${index}][id]"]`).val();
      tr$.remove();

      $('#fc_base_price').after($(`<input type="hidden" name="article[article_unit_ratios_attributes][${index}][_destroy]" value="true">`));
      $('#fc_base_price').after($(`<input type="hidden" name="article[article_unit_ratios_attributes][${index}][id]" value="${id}">`));
    });
  }

  const addButton$ = $('*[data-add-ratio]');
  addButton$.off('click').on('click', (e) => {
    e.preventDefault();
    e.stopPropagation();

    const newRow$ = articleUnitRatioTemplate$.clone();
    $('#fc_base_price tbody').append(newRow$);

    const index = $('input[name^="article[article_unit_ratios_attributes]"][name$="[sort]"]').length
      + $('input[name^="article[article_unit_ratios_attributes]"][name$="[_destroy]"]').length
      + 1;

    const sortField$ = $('[name$="[sort]"]', newRow$);
    sortField$.val(index);

    const ratioAttributeFields$ = $('[id^="article_article_unit_ratios_attributes_0_"]', newRow$);
    ratioAttributeFields$.each(function() {
      $(this).attr('name', $(this).attr('name').replace('[0]', `[${index}]`));
      $(this).attr('id', $(this).attr('id').replace('article_article_unit_ratios_attributes_0_', `article_article_unit_ratios_attributes_${index}_`));
    });

    addButtonListeners();
  });

  addButtonListeners();

  const unitInput$ = $('#article_unit');
  const supplierUnitSelect$ = $('#article_supplier_order_unit');
  supplierUnitSelect$.change(() => {
    unitInput$.prop('disabled', supplierUnitSelect$.val() !== undefined && supplierUnitSelect$.val().trim() !== '');
  });

-# var parcel = $($.parseHTML("#{escape_javascript(render('shared/parcel'))}"));
-# var parcels = #{raw @parcels.to_json};

.fold-line
  -# title: unit in which article can be ordered from supplier
  %div{:class => 'pull-right'}
    = f.select :supplier_order_unit, options_for_select(@article_units, @article.supplier_order_unit), include_blank: true
  -# title: free text unit
  = f.input :unit, input_html: {class: 'input-mini'}
.fold-line
  = "."
.fold-line
  .control-group
    %label.control-label{for: 'unit_ratios'}
      = "Unit ratios"
    %table#fc_base_price{:class => "controls"}
      %tbody
        = render :partial => 'shared/article_unit_ratio', :as => 'article_unit_ratio', :collection => @article.article_unit_ratios, locals: {f: f}
    = link_to t('.add_ratio'), '#', 'data-add-ratio' => true, class: 'btn', title: "add ratio"
.fold-line
  = f.input :minimum_order_quantity, label: "Mininum order quantity" do
    .input-append
      = f.input_field :minimum_order_quantity, class: 'input-mini', title: "total minimum order quantity for this article"
      / TODO: replace 'pck' with unit offered by supplier
      %span.add-on
        = format_supplier_article_unit(@article)
.fold-line
  = f.input :billing_unit, label: "Billing unit", input_html: {class: 'input-small', title: "unit dropdown"}
.fold-line
  = f.input :group_order_granularity, label: "Allow orders per", input_html: {class: 'input-mini', title: "steps in which ordergroups can order this article"}
  = f.input :group_order_unit, label: '&times;'.html_safe, input_html: {class: 'input-small', title: "unit dropdown"}
