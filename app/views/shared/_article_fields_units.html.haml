-# var parcel = $($.parseHTML("#{escape_javascript(render('shared/parcel'))}"));
-# var parcels = #{raw @parcels.to_json};

.fold-line
  -# title: unit in which article can be ordered from supplier
  %div{:class => 'pull-right'}
    = f.select :supplier_order_unit, options_for_select(@article_units, @article.supplier_order_unit), include_blank: true
  -# title: free text unit
  = f.input :unit, input_html: {class: 'input-mini'}
.fold-line
  = "."
.fold-line
  .control-group
    %label.control-label{for: 'unit_ratios'}
      = "Unit ratios"
    %table#fc_base_price{:class => "controls"}
      %tbody
        = render :partial => 'shared/article_unit_ratio', :as => 'article_unit_ratio', :collection => @article.article_unit_ratios, locals: {f: f}
    = link_to t('.add_ratio'), '#', 'data-add-ratio' => true, class: 'btn', title: "add ratio"
.fold-line
  = f.input :minimum_order_quantity, label: "Mininum order quantity" do
    .input-append
      = f.input_field :minimum_order_quantity, class: 'input-mini', title: "total minimum order quantity for this article"
      / TODO: replace 'pck' with unit offered by supplier
      %span.add-on
        = format_supplier_article_unit(@article)
.fold-line
  = f.input :billing_unit, label: "Billing unit", input_html: {class: 'input-small', title: "unit dropdown"}
.fold-line
  = f.input :group_order_granularity, label: "Allow orders per", input_html: {class: 'input-mini', title: "steps in which ordergroups can order this article"}
  = f.input :group_order_unit, label: '&times;'.html_safe, input_html: {class: 'input-small', title: "unit dropdown"}
